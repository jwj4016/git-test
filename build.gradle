plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.moowork.node' version '1.3.1'
	id 'java'
}

node {
	version = '16.13.1'
	npmVersion = '8.1.2'
	workDir = file("./src/frontend")
	npmWorkDir = file(".src/frontend")
	nodeModulesDir = file("./srcfrontend")
}

group = 'com.quartz.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	//testImplementation 'org.springframework.security:spring-security-test'
	
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	
	//swagger
	//implementation 'org.webjars:swagger-ui:4.1.3'
	////implementation 'io.springfox:springfox-swagger2:2.6.1'
	
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

	
	
}

task setUp(type: NpmTask){
	description = "Install Node.js packages"
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('node_modules')
}

task buildFrontend(type: NpmTask, dependsOn: setUp){
	description = "Build vue.js"
	args = ['run','build']
}

processResources.dependsOn 'buildFrontEnd'

test {
	useJUnitPlatform()
}
